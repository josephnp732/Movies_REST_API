version: 2.1

defaults: &defaults
  working_directory: ~/deployment
  docker:
    - image: gumshoe/cci-terraform:1.1.0
  environment:
    TF_IN_AUTOMATION: true

orbs:
  node: circleci/node@1.1.6
  docker: circleci/docker@1.0.1
  cloudrun: circleci/gcp-cloud-run@1.0.2

jobs:
  build-and-test:
    executor:
      name: node/default
    steps:
      - checkout
      - node/with-cache:
          steps:
            - run: npm install
            - run: npm test

  terraform-init:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: movies-project-{{ checksum "yarn.lock" }}
      - run:
          name: terraform-init
          command: | 
            cd ./deployment
            terraform init -input=false
      - persist_to_workspace:
          root: ~/deployment
          paths: ./deployment/*
      - save_cache:
          key: movies-project-{{ checksum "yarn.lock" }}
          paths:
            - "deployment"


  terraform-apply:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/deployment
      - restore_cache:
          key: movies-project-{{ checksum "yarn.lock" }}
      - run:
          name: terraform-apply
          command: |
            cd ./deployment
            terraform apply -var "do_token=${DO_PAT}" -var "pub_key=../id_rsa.pub" -var "pvt_key=../movies_jwt_secret" -var "ssh_fingerprint=${DO_SSH_FINGERPRINT}" --auto-approve
            terraform output -json fip_output
      - run:
          name: show
          command: terraform show -no-color > tfresult
      - store_artifacts:
          path: ~/deployment/tfresult
          destination: tfresult
      - save_cache:
          key: movies-project-{{ checksum "yarn.lock" }}
          paths:
            - "deployment"

  push-to-dockerhub:
    executor: docker/docker
    steps:
      - setup_remote_docker
      - checkout
      - docker/check
      - docker/build:
          image: josephnp732/movie-api
          tag: latest
          extra_build_args: '--build-arg MONGO_USERNAME=${MONGO_USERNAME} --build-arg MONGO_PASSWORD=${MONGO_PASSWORD} --build-arg MONGO_DB=${MONGO_DB} --build-arg MONGO_SECRET=${MONGO_SECRET}'
      - docker/push:
          image: josephnp732/movie-api
          tag: latest

  deploy:
    docker:
      - image: 'cimg/base:stable'
    steps:
      - checkout
      - cloudrun/init
      - cloudrun/build:
          tag: 'gcr.io/${GOOGLE_PROJECT_ID}/movie-api'
      - cloudrun/deploy:
          image: 'gcr.io/${GOOGLE_PROJECT_ID}/movie-api'
          args: '--set-env-vars=[MONGO_USERNAME=${MONGO_USERNAME},MONGO_PASSWORD=${MONGO_PASSWORD},MONGO_DB=${MONGO_DB},MONGO_SECRET=${MONGO_SECRET}]'
          platform: managed
          region: us-east1
          service-name: movie-service
          unauthenticated: true

  deploy-dev:
    docker:
      - image: 'cimg/base:stable'
    steps:
      - checkout
      - cloudrun/init
      - cloudrun/build:
          tag: 'gcr.io/${GOOGLE_PROJECT_ID}/movie-api-dev'
      - cloudrun/deploy:
          image: 'gcr.io/${GOOGLE_PROJECT_ID}/movie-api-dev'
          platform: managed
          region: us-east1
          service-name: movie-service-dev
          unauthenticated: true

workflows:
  build-and-deploy:
    jobs:
      - build-and-test
      - terraform-init:
          requires:
            - build-and-test
          filters:
            branches:
              only: master 
      - terraform-apply:
          requires:
            - terraform-init 
          filters:
            branches:
              only: master 
      - push-to-dockerhub:
          requires:
            - terraform-apply
      - deploy-dev:
          requires:
            - build-and-test
          filters:
            branches:
              only:
                - /dev-.*/   
      - deploy:
          requires:
            - terraform-apply
          filters:
            branches:
              only: master          