version: 2.1

orbs:
  node: circleci/node@1.1.6
  docker: circleci/docker@1.0.1
  cloudrun: circleci/gcp-cloud-run@1.0.2

jobs:
  build-and-test:
    executor:
      name: node/default
    steps:
      - checkout
      - node/with-cache:
          steps:
            - run: npm install
            - run: npm test

  push-to-dockerhub:
    executor: docker/docker
    steps:
      - setup_remote_docker
      - checkout
      - docker/check
      - docker/build:
          extra_build_args: '--build-arg MONGO_USERNAME=${MONGO_USERNAME} --build-arg MONGO_PASSWORD=${MONGO_PASSWORD} --build-arg MONGO_SECRET=${MONGO_SECRET} --build-arg JAEGER_COLLECTOR_ENDPOINT=${JAEGER_COLLECTOR_ENDPOINT} --build-arg JAEGER_SERVICE_NAME=${JAEGER_SERVICE_NAME} --build-arg JAEGER_AGENT_HOST=${JAEGER_AGENT_HOST} --build-arg SENTRY_DNS=${SENTRY_DNS}'
          image: josephnp732/movie-api
          tag: latest
      - docker/push:
          image: josephnp732/movie-api
          tag: latest

  deploy:
    docker:
      - image: 'cimg/base:stable'
    steps:
      - checkout
      - cloudrun/init
      - cloudrun/build:
          tag: 'gcr.io/${GOOGLE_PROJECT_ID}/movie-api'
      - cloudrun/deploy:
          image: 'gcr.io/${GOOGLE_PROJECT_ID}/movie-api'
          platform: managed
          region: us-east1
          service-name: movie-service
          unauthenticated: true

  deploy-dev:
    docker:
      - image: 'cimg/base:stable'
    steps:
      - checkout
      - cloudrun/init
      - cloudrun/build:
          tag: 'gcr.io/${GOOGLE_PROJECT_ID}/movie-api-dev'
      - cloudrun/deploy:
          image: 'gcr.io/${GOOGLE_PROJECT_ID}/movie-api-dev'
          platform: managed
          region: us-east1
          service-name: movie-service-dev
          unauthenticated: true

workflows:
  build-and-deploy:
    jobs:
      - build-and-test
      - push-to-dockerhub:
          requires:
            - build-and-test
      - deploy-dev:
          requires:
            - build-and-test
          filters:
            branches:
              only:
                - /dev-.*/   
      - deploy:
          filters:
            branches:
              only: master          